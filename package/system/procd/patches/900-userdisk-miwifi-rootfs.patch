--- a/inittab.c
+++ b/inittab.c
@@ -65,8 +65,8 @@ struct init_action {
 	struct uloop_timeout tout;
 };
 
-static const char *tab = "/etc/inittab";
-static char *ask = "/sbin/askfirst";
+static const char *tab = "/userdisk/miwifi/etc/inittab";
+static char *ask = "/userdisk/miwifi/sbin/askfirst";
 
 static LIST_HEAD(actions);
 
--- a/jail/elf.c
+++ b/jail/elf.c
@@ -310,8 +310,8 @@ static void load_ldso_conf(const char *c
 void init_library_search(void)
 {
 	avl_init(&libraries, avl_strcmp, false, NULL);
-	alloc_library_path("/lib");
-	alloc_library_path("/lib64");
-	alloc_library_path("/usr/lib");
-	load_ldso_conf("/etc/ld.so.conf");
+	alloc_library_path("/userdisk/miwifi/lib");
+	alloc_library_path("/userdisk/miwifi/lib64");
+	alloc_library_path("/userdisk/miwifi/usr/lib");
+	load_ldso_conf("/userdisk/miwifi/etc/ld.so.conf");
 }
--- a/jail/jail.c
+++ b/jail/jail.c
@@ -124,7 +124,7 @@ int mount_bind(const char *root, const c
 
 static int build_jail_fs(void)
 {
-	char jail_root[] = "/tmp/ujail-XXXXXX";
+	char jail_root[] = "/userdisk/miwifi/tmp/ujail-XXXXXX";
 	if (mkdtemp(jail_root) == NULL) {
 		ERROR("mkdtemp(%s) failed: %m\n", jail_root);
 		return -1;
@@ -310,7 +310,7 @@ int main(int argc, char **argv)
 	sigset_t sigmask;
 	uid_t uid = getuid();
 	char log[] = "/dev/log";
-	char ubus[] = "/var/run/ubus.sock";
+	char ubus[] = "/userdisk/miwifi/var/run/ubus.sock";
 	int ch, i;
 
 	if (uid) {
--- a/rcS.c
+++ b/rcS.c
@@ -184,12 +184,12 @@ int rcS(char *pattern, char *param, void
 	q.empty_cb = q_empty;
 	q.max_running_tasks = 1;
 
-	return _rc(&q, "/etc/rc.d", pattern, "*", param);
+	return _rc(&q, "/userdisk/miwifi/etc/rc.d", pattern, "*", param);
 }
 
 int rc(const char *file, char *param)
 {
-	return _rc(&r, "/etc/init.d", file, "", param);
+	return _rc(&r, "/userdisk/miwifi/etc/init.d", file, "", param);
 }
 
 static void r_empty(struct runqueue *q)
--- a/service/instance.c
+++ b/service/instance.c
@@ -187,7 +187,7 @@ jail_run(struct service_instance *in, ch
 	struct jail *jail = &in->jail;
 	int argc = 0;
 
-	argv[argc++] = "/sbin/ujail";
+	argv[argc++] = "/userdisk/miwifi/sbin/ujail";
 
 	if (jail->name) {
 		argv[argc++] = "-n";
@@ -298,7 +298,7 @@ instance_run(struct service_instance *in
 		setenv("SECCOMP_FILE", in->seccomp, 1);
 
 	if (setlbf)
-		setenv("LD_PRELOAD", "/lib/libsetlbf.so", 1);
+		setenv("LD_PRELOAD", "/userdisk/miwifi/lib/libsetlbf.so", 1);
 
 	blobmsg_list_for_each(&in->limits, var)
 		instance_limits(blobmsg_name(var->data), blobmsg_data(var->data));
@@ -311,9 +311,9 @@ instance_run(struct service_instance *in
 
 #ifdef SECCOMP_SUPPORT
 	if (in->trace)
-		argv[argc++] = "/sbin/utrace";
+		argv[argc++] = "/userdisk/miwifi/sbin/utrace";
 	else if (seccomp)
-		argv[argc++] = "/sbin/seccomp-trace";
+		argv[argc++] = "/userdisk/miwifi/sbin/seccomp-trace";
 #else
 	if (in->trace || seccomp)
 		ULOG_WARN("Seccomp support for %s::%s not available\n", in->srv->name, in->name);
@@ -743,7 +743,7 @@ instance_jail_parse(struct service_insta
 	struct jail *jail = &in->jail;
 	struct stat s;
 
-	if (stat("/sbin/ujail", &s))
+	if (stat("/userdisk/miwifi/sbin/ujail", &s))
 		return 0;
 
 	blobmsg_parse(jail_attr, __JAIL_ATTR_MAX, tb,
--- a/state.c
+++ b/state.c
@@ -95,13 +95,13 @@ static void set_console(void)
 
 static void state_enter(void)
 {
-	char ubus_cmd[] = "/sbin/ubusd";
+	char ubus_cmd[] = "/userdisk/miwifi/sbin/ubusd";
 
 	switch (state) {
 	case STATE_EARLY:
 		LOG("- early -\n");
 		watchdog_init(0);
-		hotplug("/etc/hotplug.json");
+		hotplug("/userdisk/miwifi/etc/hotplug.json");
 		procd_coldplug();
 		break;
 
--- a/system.c
+++ b/system.c
@@ -80,7 +80,7 @@ static int system_board(struct ubus_cont
 		fclose(f);
 	}
 
-	if ((f = fopen("/tmp/sysinfo/model", "r")) != NULL ||
+	if ((f = fopen("/userdisk/miwifi/tmp/sysinfo/model", "r")) != NULL ||
 	    (f = fopen("/proc/device-tree/model", "r")) != NULL)
 	{
 		if (fgets(line, sizeof(line), f))
@@ -114,7 +114,7 @@ static int system_board(struct ubus_cont
 		fclose(f);
 	}
 
-	if ((f = fopen("/tmp/sysinfo/board_name", "r")) != NULL)
+	if ((f = fopen("/userdisk/miwifi/tmp/sysinfo/board_name", "r")) != NULL)
 	{
 		if (fgets(line, sizeof(line), f))
 		{
@@ -148,7 +148,7 @@ static int system_board(struct ubus_cont
 		fclose(f);
 	}
 
-	if ((f = fopen("/etc/openwrt_release", "r")) != NULL)
+	if ((f = fopen("/userdisk/miwifi/etc/openwrt_release", "r")) != NULL)
 	{
 		c = blobmsg_open_table(&b, "release");
 
--- a/sysupgrade.c
+++ b/sysupgrade.c
@@ -25,7 +25,7 @@
 void sysupgrade_exec_upgraded(const char *prefix, char *path, char *command)
 {
 	char *wdt_fd = watchdog_fd();
-	char *argv[] = { "/sbin/upgraded", NULL, NULL, NULL};
+	char *argv[] = { "/userdisk/miwifi/sbin/upgraded", NULL, NULL, NULL};
 	int ret;
 
 	ret = chroot(prefix);
--- a/trace/trace.c
+++ b/trace/trace.c
@@ -311,11 +311,11 @@ int main(int argc, char **argv, char **e
 		_envp = calloc(envc + 2, sizeof(char *));
 		switch (mode) {
 		case UTRACE:
-			preload = "/lib/libpreload-trace.so";
+			preload = "/userdisk/miwifi/lib/libpreload-trace.so";
 			newenv = 1;
 			break;
 		case SECCOMP_TRACE:
-			preload = "/lib/libpreload-seccomp.so";
+			preload = "/userdisk/miwifi/lib/libpreload-seccomp.so";
 			newenv = 2;
 			if (asprintf(&_envp[1], "SECCOMP_FILE=%s", json ? json : "") < 0)
 				ULOG_ERR("failed to allocate SECCOMP_FILE env: %m\n");
@@ -381,13 +381,13 @@ int main(int argc, char **argv, char **e
 	switch (mode) {
 	case UTRACE:
 		if (!json)
-			if (asprintf(&json, "/tmp/%s.%u.json", basename(*argv), child) < 0)
+			if (asprintf(&json, "/userdisk/miwifi/tmp/%s.%u.json", basename(*argv), child) < 0)
 				ULOG_ERR("failed to allocate output path: %m\n");
 		break;
 	case SECCOMP_TRACE:
 		if (!violation_count)
 			return 0;
-		if (asprintf(&json, "/tmp/%s.%u.violations.json", basename(*argv), child) < 0)
+		if (asprintf(&json, "/userdisk/miwifi/tmp/%s.%u.violations.json", basename(*argv), child) < 0)
 			ULOG_ERR("failed to allocate violations output path: %m\n");
 		break;
 	}
